{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\81905\\\\ETH-NFT-game\\\\nft-game-starter-project\\\\src\\\\Components\\\\Arena\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport './Arena.css'; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []); // ボスのメタデータを保存する状態変数を初期化します。\n\n  const [boss, setBoss] = useState(null);\n\n  const runAttackAction = async () => {}; // ページがロードされると下記が実行されます。\n\n\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log('Boss:', bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n\n    if (gameContract) {\n      // コントラクトの準備ができたら、ボスのメタデータを取得します。\n      fetchBoss();\n    }\n  }, [gameContract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30DC\\u30B9\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Arena, \"CAG/4DM/OQD/KA03H/IUK1g6UX0=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"sources":["C:/Users/81905/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","gameContract","setGameContract","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","console","log","boss","setBoss","runAttackAction","fetchBoss","bossTxn","getBigBoss"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,iBAAzD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,aAAP,C,CACA;;;;AACA,MAAMC,KAAK,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAClC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD,CAFkC,CAGlC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEU,MAAAA;AAAF,QAAeC,MAArB;;AACA,QAAID,QAAJ,EAAc;AACZ,YAAME,QAAQ,GAAG,IAAIV,MAAM,CAACW,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMR,YAAY,GAAG,IAAIN,MAAM,CAACe,QAAX,CACnBd,gBADmB,EAEnBE,UAAU,CAACa,GAFQ,EAGnBH,MAHmB,CAArB;AAKAN,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD,KATD,MASO;AACLW,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACF,GAdQ,EAcN,EAdM,CAAT,CAJkC,CAmBlC;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAOsB,eAAe,GAAK,YAAU,CAAE,CAAvC,CArBkC,CAuBhC;;;AACFvB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMwB,SAAS,GAAG,YAAY;AAC1B,YAAMC,OAAO,GAAG,MAAMjB,YAAY,CAACkB,UAAb,EAAtB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,OAArB;AACAH,MAAAA,OAAO,CAAClB,sBAAsB,CAACqB,OAAD,CAAvB,CAAP;AACH,KAJD;;AAKA,QAAIjB,YAAJ,EAAkB;AACd;AACAgB,MAAAA,SAAS;AACZ;AACF,GAXQ,EAWN,CAAChB,YAAD,CAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7CD;;GAAMF,K;;KAAAA,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\r\nimport myEpicGame from '../../utils/MyEpicGame.json';\r\nimport './Arena.css';\r\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\r\nconst Arena = ({ characterNFT }) => {\r\n  // コントラクトのデータを保有する状態変数を初期化します。\r\n  const [gameContract, setGameContract] = useState(null);\r\n  // ページがロードされると下記が実行されます。\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum) {\r\n      const provider = new ethers.providers.Web3Provider(ethereum);\r\n      const signer = provider.getSigner();\r\n      const gameContract = new ethers.Contract(\r\n        CONTRACT_ADDRESS,\r\n        myEpicGame.abi,\r\n        signer\r\n      );\r\n      setGameContract(gameContract);\r\n    } else {\r\n      console.log('Ethereum object not found');\r\n    }\r\n  }, []);\r\n  // ボスのメタデータを保存する状態変数を初期化します。\r\n  const [boss, setBoss] = useState(null);\r\n  const  runAttackAction  =  async()=> {};\r\n\r\n    // ページがロードされると下記が実行されます。\r\n  useEffect(() => {\r\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\r\n    const fetchBoss = async () => {\r\n        const bossTxn = await gameContract.getBigBoss();\r\n        console.log('Boss:', bossTxn);\r\n        setBoss(transformCharacterData(bossTxn));\r\n    };\r\n    if (gameContract) {\r\n        // コントラクトの準備ができたら、ボスのメタデータを取得します。\r\n        fetchBoss();\r\n    }\r\n  }, [gameContract]);\r\n\r\n  return (\r\n    <div className=\"arena-container\">\r\n      {/* ボス */}\r\n      <p>ボスを表示します。</p>\r\n      {/* NFT キャラクター */}\r\n      <p>NFT キャラクターを表示します。</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Arena;"]},"metadata":{},"sourceType":"module"}